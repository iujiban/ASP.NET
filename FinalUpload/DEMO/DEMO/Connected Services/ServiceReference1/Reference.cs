//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DEMO.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="gettestdata", Namespace="http://schemas.datacontract.org/2004/07/localHost")]
    [System.SerializableAttribute()]
    public partial class gettestdata : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataSet GettingDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataSet GettingData {
            get {
                return this.GettingDataField;
            }
            set {
                if ((object.ReferenceEquals(this.GettingDataField, value) != true)) {
                    this.GettingDataField = value;
                    this.RaisePropertyChanged("GettingData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateUser", Namespace="http://schemas.datacontract.org/2004/07/localHost")]
    [System.SerializableAttribute()]
    public partial class UpdateUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustSEQField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PTJSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PTJNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int CustSEQ {
            get {
                return this.CustSEQField;
            }
            set {
                if ((this.CustSEQField.Equals(value) != true)) {
                    this.CustSEQField = value;
                    this.RaisePropertyChanged("CustSEQ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string CUSTName {
            get {
                return this.CUSTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTNameField, value) != true)) {
                    this.CUSTNameField = value;
                    this.RaisePropertyChanged("CUSTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string PTJSeq {
            get {
                return this.PTJSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.PTJSeqField, value) != true)) {
                    this.PTJSeqField = value;
                    this.RaisePropertyChanged("PTJSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string PTJNAME {
            get {
                return this.PTJNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PTJNAMEField, value) != true)) {
                    this.PTJNAMEField = value;
                    this.RaisePropertyChanged("PTJNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string ServiceLevel {
            get {
                return this.ServiceLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceLevelField, value) != true)) {
                    this.ServiceLevelField = value;
                    this.RaisePropertyChanged("ServiceLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInfo", ReplyAction="http://tempuri.org/IService1/GetInfoResponse")]
        DEMO.ServiceReference1.gettestdata GetInfo(string phoneNumber, string dashNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInfo", ReplyAction="http://tempuri.org/IService1/GetInfoResponse")]
        System.Threading.Tasks.Task<DEMO.ServiceReference1.gettestdata> GetInfoAsync(string phoneNumber, string dashNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update", ReplyAction="http://tempuri.org/IService1/UpdateResponse")]
        string Update(DEMO.ServiceReference1.UpdateUser u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update", ReplyAction="http://tempuri.org/IService1/UpdateResponse")]
        System.Threading.Tasks.Task<string> UpdateAsync(DEMO.ServiceReference1.UpdateUser u);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : DEMO.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<DEMO.ServiceReference1.IService1>, DEMO.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DEMO.ServiceReference1.gettestdata GetInfo(string phoneNumber, string dashNumber) {
            return base.Channel.GetInfo(phoneNumber, dashNumber);
        }
        
        public System.Threading.Tasks.Task<DEMO.ServiceReference1.gettestdata> GetInfoAsync(string phoneNumber, string dashNumber) {
            return base.Channel.GetInfoAsync(phoneNumber, dashNumber);
        }
        
        public string Update(DEMO.ServiceReference1.UpdateUser u) {
            return base.Channel.Update(u);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAsync(DEMO.ServiceReference1.UpdateUser u) {
            return base.Channel.UpdateAsync(u);
        }
    }
}
